!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CacheEntry	.\LRU_Cache.cpp	/^            CacheEntry(int k, int v): key(k), value(v){}$/;"	f	struct:LRUCache::CacheEntry
CacheEntry	.\LRU_Cache.cpp	/^    struct CacheEntry{$/;"	s	class:LRUCache	file:
DirectoryOfThisScript	.\.ycm_extra_conf.py	/^def DirectoryOfThisScript(): $/;"	f
FlagsForFile	.\.ycm_extra_conf.py	/^def FlagsForFile( filename, **kwargs ): $/;"	f
GetCompilationInfoForFile	.\.ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ): $/;"	f
IsHeaderFile	.\.ycm_extra_conf.py	/^def IsHeaderFile( filename ): $/;"	f
LRUCache	.\LRU_Cache.cpp	/^class LRUCache{$/;"	c	file:
LRUCache	.\LRU_Cache.cpp	/^    LRUCache(int capacity){$/;"	f	class:LRUCache
MakeRelativePathsInFlagsAbsolute	.\.ycm_extra_conf.py	/^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ): $/;"	f
MoveToHead	.\LRU_Cache.cpp	/^    void MoveToHead(int key){$/;"	f	class:LRUCache	file:
PreOrderTraversal	.\Binary_Tree_Postorder_Traversal.cpp	/^    void PreOrderTraversal(TreeNode *root,stack<int> &s){$/;"	f	class:Solution
SOURCE_EXTENSIONS	.\.ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ] $/;"	v
Solution	.\Binary_Tree_Postorder_Traversal.cpp	/^class Solution {$/;"	c	file:
Solution	.\Binary_Tree_Preorder_Traversal.cpp	/^class Solution {$/;"	c	file:
Solution	.\Candy.cpp	/^class Solution {$/;"	c	file:
Solution	.\Copy_List_with_Random_Pointer.cpp	/^class Solution {$/;"	c	file:
Solution	.\Evaluate_Reverse_polish_Notation.cpp	/^class Solution {$/;"	c	file:
Solution	.\Gas_Station.cpp	/^class Solution {$/;"	c	file:
Solution	.\Insertion_Sort_List.cpp	/^class Solution {$/;"	c	file:
Solution	.\Linked_List_Cycle.cpp	/^class Solution {$/;"	c	file:
Solution	.\Linked_List_Cycle_2.cpp	/^class Solution {$/;"	c	file:
Solution	.\Max_Points_on_a_Line.cpp	/^class Solution {$/;"	c	file:
Solution	.\Reorder_List.cpp	/^class Solution {$/;"	c	file:
Solution	.\Reverse_Words_in_a_String.cpp	/^class Solution {$/;"	c	file:
Solution	.\Single_number.cpp	/^class Solution {$/;"	c	file:
Solution	.\Single_number_2.cpp	/^class Solution {$/;"	c	file:
Solution	.\Sort_List.cpp	/^class Solution {$/;"	c	file:
Solution	.\Word_Break.cpp	/^class Solution {$/;"	c	file:
Solution	.\Word_Break_2.cpp	/^class Solution {$/;"	c	file:
canCompleteCircuit	.\Gas_Station.cpp	/^	int canCompleteCircuit(vector<int> &gas, vector<int> &cost) {$/;"	f	class:Solution
candy	.\Candy.cpp	/^	int candy(vector<int> &ratings){$/;"	f	class:Solution
child_s	.\Candy.cpp	/^typedef struct child_s{$/;"	s	file:
child	.\Candy.cpp	/^}child;$/;"	t	typeref:struct:child_s	file:
cmp	.\Candy.cpp	/^int cmp(const void *a , const void *b){$/;"	f
compilation_database_folder	.\.ycm_extra_conf.py	/^compilation_database_folder = '' $/;"	v
copyRandomList	.\Copy_List_with_Random_Pointer.cpp	/^    RandomListNode *copyRandomList(RandomListNode *head) {$/;"	f	class:Solution
database	.\.ycm_extra_conf.py	/^  database = None $/;"	v
database	.\.ycm_extra_conf.py	/^  database = ycm_core.CompilationDatabase( compilation_database_folder ) $/;"	v
detectCycle	.\Linked_List_Cycle_2.cpp	/^    ListNode *detectCycle(ListNode *head) {$/;"	f	class:Solution
evalRPN	.\Evaluate_Reverse_polish_Notation.cpp	/^    int evalRPN(vector<string> &tokens) {$/;"	f	class:Solution
findMedianSortedArrays	.\Median_of_Two_Sorted_Arrays.cpp	/^double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2)$/;"	f
flags	.\.ycm_extra_conf.py	/^flags = [ $/;"	v
get	.\LRU_Cache.cpp	/^    int get(int key){$/;"	f	class:LRUCache
hasCycle	.\Linked_List_Cycle.cpp	/^    bool hasCycle(ListNode *head) {$/;"	f	class:Solution
insertionSortList	.\Insertion_Sort_List.cpp	/^    ListNode *insertionSortList(ListNode *head) {$/;"	f	class:Solution
key	.\LRU_Cache.cpp	/^            int key;$/;"	m	struct:LRUCache::CacheEntry	file:
lengthOfLongestSubstring	.\Longest_Substring_Without_RepCh.cpp	/^    int lengthOfLongestSubstring(string s) {$/;"	f
m_LRU_cache	.\LRU_Cache.cpp	/^    list<CacheEntry> m_LRU_cache;$/;"	m	class:LRUCache	file:
m_capacity	.\LRU_Cache.cpp	/^    int m_capacity;$/;"	m	class:LRUCache	file:
m_map	.\LRU_Cache.cpp	/^    unordered_map<int, list<CacheEntry>::iterator> m_map;$/;"	m	class:LRUCache	file:
main	.\Gas_Station.cpp	/^int main(){$/;"	f
main	.\Median_of_Two_Sorted_Arrays.cpp	/^int main(int argc, const char *argv[])$/;"	f
maxPoints	.\Max_Points_on_a_Line.cpp	/^    int maxPoints(vector<Point> &points) {$/;"	f	class:Solution
merge	.\Sort_List.cpp	/^    ListNode* merge(ListNode *a , ListNode *b){$/;"	f	class:Solution
os	.\.ycm_extra_conf.py	/^import os $/;"	i
pos	.\Candy.cpp	/^	int pos;$/;"	m	struct:child_s	file:
postorderTraversal	.\Binary_Tree_Postorder_Traversal.cpp	/^    vector<int> postorderTraversal(TreeNode *root) {$/;"	f	class:Solution
preorderTraversal	.\Binary_Tree_Preorder_Traversal.cpp	/^    vector<int> preorderTraversal(TreeNode *root) {$/;"	f	class:Solution
preorder	.\Binary_Tree_Preorder_Traversal.cpp	/^    void preorder(TreeNode *root,vector<int> &v){$/;"	f	class:Solution
rate	.\Candy.cpp	/^	int rate;$/;"	m	struct:child_s	file:
reorderList	.\Reorder_List.cpp	/^    void reorderList(ListNode *head) {$/;"	f	class:Solution
reverseWords	.\Reverse_Words_in_a_String.cpp	/^    void reverseWords(string &s) {$/;"	f	class:Solution
set	.\LRU_Cache.cpp	/^    void set(int key, int value){$/;"	f	class:LRUCache
singleNumber	.\Single_number.cpp	/^    int singleNumber(int A[], int n) {$/;"	f	class:Solution
singleNumber	.\Single_number_2.cpp	/^    int singleNumber(int A[], int n) {$/;"	f	class:Solution
sortList	.\Sort_List.cpp	/^    ListNode *sortList(ListNode *Head) {$/;"	f	class:Solution
value	.\LRU_Cache.cpp	/^            int value;$/;"	m	struct:LRUCache::CacheEntry	file:
wordBreaker	.\Word_Break_2.cpp	/^    bool wordBreaker(string s, unordered_set<string> &dict,stack<string> stk,vector<string> &ans,set<string> &unmatched){$/;"	f	class:Solution
wordBreak	.\Word_Break.cpp	/^    bool wordBreak(string s, unordered_set<string> &dict) {$/;"	f	class:Solution
wordBreak	.\Word_Break_2.cpp	/^    vector<string> wordBreak(string s, unordered_set<string> &dict) {$/;"	f	class:Solution
ycm_core	.\.ycm_extra_conf.py	/^import ycm_core $/;"	i
